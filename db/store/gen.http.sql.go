// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: http.sql

package store

import (
	"context"
)

const extDelCategory = `-- name: ExtDelCategory :execrows
DELETE FROM categories WHERE author_id = $1 AND id = $2
`

func (q *DBStore) ExtDelCategory(ctx context.Context, authorID string, iD string) (int64, error) {
	result, err := q.db.Exec(ctx, extDelCategory, authorID, iD)
	if err != nil {
		return 0, err
	}
	return result.RowsAffected(), nil
}

const extGetCategories = `-- name: ExtGetCategories :many
SELECT id, color, icon, name FROM categories WHERE author_id = $1
`

type ExtGetCategoriesRow struct {
	ID    string `json:"id"`
	Color string `json:"color"`
	Icon  string `json:"icon"`
	Name  string `json:"name"`
}

func (q *DBStore) ExtGetCategories(ctx context.Context, authorID string) ([]*ExtGetCategoriesRow, error) {
	rows, err := q.db.Query(ctx, extGetCategories, authorID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*ExtGetCategoriesRow
	for rows.Next() {
		var i ExtGetCategoriesRow
		if err := rows.Scan(
			&i.ID,
			&i.Color,
			&i.Icon,
			&i.Name,
		); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
